// Note: "common.gradle" in the root project contains additional initialization
//   for this project. This initialization is applied in the "build.gradle"
//   of the root project.

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.

plugins {
  id "java"
  id "com.github.hierynomus.jython" version "0.4.0"
}

apply plugin: "com.github.hierynomus.jython"


repositories {
  maven {
    url "https://plugins.gradle.org/m2/"
  }
}



//plugins {
//    id "java"
    //id "com.github.hierynomus.jython" version "0.3.1"
  //id "com.github.rzabini.gradle-jython" version "1.0.0"
//}
//jython {
//    pypackage 'selenium:3.0.1'
//}

if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}


dependencies {
    // TODO: Add dependencies here
    //   but note that JUnit should have already been added in parent.gradle.
    //   By default, only the Maven Central Repository is specified in
    //   parent.gradle.
    //
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies

    // Example of adding python dependencies needed by the python test implemenations
    //testJython \
    //    ":nose:1.3.7"


    testCompile \
        'com.codeborne:selenide:4.0',
        'junit:junit:4.10',
        'info.cukes:cucumber-java8:1.2.5',
        'info.cukes:cucumber-junit:1.2.5',
        'info.cukes:cucumber-jython:1.2.5',
        'org.python:jython-standalone:2.7.1b3'


}

test {
    testLogging.showStandardStreams = true
    systemProperties System.getProperties()


}

// Example of how run python scripts as in Gradle tasks
//task testJython(type:jython.JythonTask) {
//    classpath configurations.testCompile
//    script file("src/test/resources/python/run-jython.py")
//}

task copyToLib(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.testCompile
}
